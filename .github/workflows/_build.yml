name: Build

on:
  workflow_call:
    inputs:
      image:
        type: string
        required: true
      registry:
        type: string
        required: false
        default: ghcr.io
      container_file_name:
        type: string
        required: false
        default: Dockerfile

permissions:
  actions: read
  packages: write

jobs:
  prepare-tags:
    name: Collect tags
    runs-on: ubuntu-latest
    outputs:
      matrix: ${{ steps.matrix-list.outputs.matrix }}
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Getting tags
        id: matrix-list
        run: |
          image="${{ inputs.image }}"
          
          if [ ! -d "$image" ]; then
            echo "Error: Folder '$image' does not exist!"
            exit 1
          fi
          
          versions=$(find "$image" -mindepth 1 -maxdepth 1 -type d -printf "%f\n" | jq -R '.' | jq -s '.' -c)
          
          if [ "$(echo "$versions" | jq '. | length')" == 0 ]; then
            echo "No versions found in '$image'!"
            exit 1
          fi
          
          echo "matrix=$versions" >> $GITHUB_OUTPUT

  build:
    runs-on: ubuntu-latest
    needs: prepare-tags
    strategy:
      matrix:
        tag: ${{fromJson(needs.prepare-tags.outputs.matrix)}}
      fail-fast: false
      max-parallel: 1
    name: Build ${{ inputs.image }}-${{ matrix.tag }}
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup BuildX
        uses: docker/setup-buildx-action@v3

      - name: Login to ${{ inputs.registry }}
        uses: docker/login-action@v3
        with:
          registry: ${{ inputs.registry }}
          username: ${{ github.repository_owner }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Build and push image
        uses: docker/build-push-action@v5
        with:
          context: ${{ inputs.image }}
          file: ${{ inputs.image }}/${{ matrix.tag }}/${{ inputs.container_file_name }}
          platforms: linux/amd64
          push: true
          tags: ${{ inputs.registry }}/${{ github.repository_owner }}/pterodactyl-images/${{ inputs.image }}:${{ matrix.tag }}
